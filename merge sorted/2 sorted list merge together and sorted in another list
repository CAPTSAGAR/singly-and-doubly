#include<stdio.h>
#include<malloc.h>

struct node{
	int data;
	struct node *next;
};

int count=0;

struct node *append(struct node *head,int x)
{
	struct node *newnode,*temp;
	newnode=(struct node *)malloc(sizeof(struct node));
	newnode->data=x;
	newnode->next=NULL;
	if(head==NULL)
	{
		head=newnode;
   	}
    else
	{
		temp=head;
		while(temp->next!=NULL)
		{
			temp=temp->next;
		}
		temp->next=newnode;
		
	}
	return head;
}

struct node *display(struct node *head)
{
	struct node *temp;
	if(head==NULL)
	{
		printf("\n make a list first");
	}
	else
	{
	   for(temp=head;temp!=NULL;temp=temp->next)
	   {
	   	printf("\t %d->",temp->data);
	   }
	   printf("NULL");
	}
}

struct node *merge(struct node *head1,struct node *head2)
{
	struct node *temp1=head1;
	struct node *temp2=head2;
	struct node *head3=NULL,*temp3;
	if(head1==NULL)
	{
		head3=head2;
	}
	else if(head2==NULL)
	{
		head3=head1;
	}
	while(temp1!=NULL && temp2!=NULL)
	{
		if(temp1->data < temp2->data)
		{
			head3=append(head3,temp1->data);
			temp1=temp1->next;
		}
		else if(temp1->data > temp2->data)
		{
			head3=append(head3,temp2->data);
			temp2=temp2->next;
		}
		else
		{
			head3=append(head3,temp2->data);
			temp2=temp2->next;
			temp1=temp1->next;
			
		}
	}
	temp3=head3;
	while(temp3->next!=NULL)
	{
		temp3=temp3->next;
	}
	if(temp1==NULL)
	{
		temp3->next=temp2;
	}
	else if(temp2==NULL)
	{
		temp3->next=temp1;
	}
	return head3;
}

int main()
{
	struct node *head1,*head2,*head3;
	int x1,x2,i,data;
	head1=head2=NULL;
	printf("\nEnter the number of nodes you want in first list:\n");
	scanf("%d",&x1);
	printf("\nEnter the number of nodes you want in second list:\n");
	scanf("%d",&x2);
	printf("\nenter the values of first list in sorted form:\n");
	for(i=1;i<=x1;i++)
	{
		scanf("%d",&data);
		head1=append(head1,data);
	}
	printf("\nenter the values of second list in sorted form:\n");
	for(i=1;i<=x2;i++)
	{
		scanf("%d",&data);
		head2=append(head2,data);
	}
	head3=merge(head1,head2);
	printf("\nfirst list before :\n");
	display(head1);
	printf("\nsecond list before :\n");
	display(head2);
	printf("\nlist after merging:\n");
	display(head3);
	return 0;
}
